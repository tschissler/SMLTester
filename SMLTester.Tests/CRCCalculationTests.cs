namespace SMLTester.Tests
{
    [TestClass]
    public class CRCCalculationTests
    {
        [TestMethod]
        public void CheckCRC1Valid()
        {
            var testData = new List<byte>
            {
                0x1B, 0x1B, 0x1B, 0x1B, 0x01, 0x01, 0x01, 0x01, 0x76, 0x07, 0x00, 0x13, 0x06, 0x09, 0xC2, 0xB5, 0x62, 0x00, 0x62, 0x00,
                0x72, 0x63, 0x01, 0x01, 0x76, 0x01, 0x01, 0x07, 0x00, 0x13, 0x11, 0x38, 0x40, 0xE7, 0x0B, 0x06, 0x45, 0x4D, 0x48, 0x01, 0x09, 0x6D, 0x93, 0xF8, 0xFA, 0x01, 0x01, 0x63, 0x26, 0x4D, 0x00, 0x76, 0x07, 0x00, 0x13, 0x06, 0x09, 0xC2, 0xB6, 0x62, 0x00, 0x62, 0x00, 0x72, 0x63, 0x07, 0x01, 0x77, 0x01, 0x0B, 0x06, 0x45, 0x4D, 0x48, 0x01, 0x09, 0x6D, 0x93, 0xF8, 0xFA, 0x07, 0x01, 0x00, 0x62, 0x0A, 0xFF, 0xFF, 0x72, 0x62, 0x01, 0x65, 0x11, 0x38, 0x08, 0x5E, 0x7A, 0x77, 0x07, 0x81, 0x81, 0xC7, 0x82, 0x03, 0xFF, 0x01, 0x01, 0x01, 0x01, 0x04, 0x45, 0x4D, 0x48, 0x01, 0x77, 0x07, 0x01, 0x00, 0x00, 0x00, 0x09, 0xFF, 0x01, 0x01, 0x01, 0x01, 0x0B, 0x06, 0x45, 0x4D, 0x48, 0x01, 0x09, 0x6D, 0x93, 0xF8, 0xFA, 0x01, 0x77, 0x07, 0x01, 0x00, 0x01, 0x08,
                0x00, 0xFF, 0x64, 0x01, 0x02, 0x82, 0x01, 0x62, 0x1E, 0x52, 0xFF, 0x56, 0x00, 0x19, 0x39, 0xB3, 0x35, 0x01, 0x77, 0x07, 0x01, 0x00, 0x02, 0x08, 0x00, 0xFF, 0x64, 0x01, 0x02, 0x82, 0x01, 0x62, 0x1E, 0x52, 0xFF, 0x56, 0x00, 0x1A, 0xC3, 0xE6, 0x54, 0x01, 0x77, 0x07, 0x01, 0x00, 0x01, 0x08, 0x01, 0xFF, 0x01, 0x01, 0x62, 0x1E, 0x52, 0xFF, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x77, 0x07, 0x01, 0x00, 0x02, 0x08, 0x01, 0xFF, 0x01, 0x01, 0x62, 0x1E, 0x52, 0xFF, 0x56, 0x00, 0x1A, 0xC3, 0xE6, 0x54, 0x01, 0x77, 0x07, 0x01, 0x00, 0x01, 0x08, 0x02, 0xFF, 0x01, 0x01, 0x62, 0x1E, 0x52, 0xFF, 0x56, 0x00, 0x19, 0x39, 0xB3, 0x35, 0x01, 0x77, 0x07, 0x01, 0x00, 0x02, 0x08, 0x02, 0xFF, 0x01, 0x01, 0x62, 0x1E, 0x52, 0xFF, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x77, 0x07, 0x01, 0x00, 0x10, 0x07, 0x00, 0xFF, 0x01, 0x01, 0x62, 0x1B, 0x52, 0xFF,
                0x55, 0x00, 0x00, 0x01, 0xC2, 0x01, 0x77, 0x07, 0x81, 0x81, 0xC7, 0x82, 0x05, 0xFF, 0x01, 0x72, 0x62, 0x01, 0x65, 0x11, 0x38, 0x08, 0x5E, 0x01, 0x01, 0x83, 0x02, 0x7A, 0x21, 0x7D, 0x5D, 0x15, 0xA5, 0x33, 0x8D, 0xD2, 0xD9, 0x4A, 0xCB, 0x11, 0xDB, 0xAB, 0x07, 0xB9, 0x94, 0xBE, 0x23, 0x34, 0x24, 0xF2, 0x2E, 0x21, 0x8B, 0xC9, 0x10, 0xF3, 0x34, 0x96, 0xDD, 0xED, 0xA2, 0x99, 0x77, 0x04, 0xB0, 0xFE, 0xBB, 0xA6, 0x3C, 0x00, 0xE3, 0x32, 0x82, 0x15, 0xE9, 0x01, 0x01, 0x01, 0x63, 0xB9, 0x20, 0x00, 0x76, 0x07, 0x00, 0x13, 0x06, 0x09, 0xC2, 0xB9, 0x62, 0x00, 0x62, 0x00, 0x72, 0x63, 0x02, 0x01, 0x71, 0x01, 0x63, 0xB0, 0x51, 0x00, 0x00, 0x1B, 0x1B, 0x1B, 0x1B, 0x1A, 0x01, 0x1D, 0xB4
            };

            var actual = SMLParser.Verify(testData.ToArray());
            Assert.IsTrue(actual, "CRC check failed.");
        }

        [TestMethod]
        public void CheckCRC2Valid()
        {
            var testData = new List<byte>
            {
                0x1B, 0x1B, 0x1B, 0x1B, 0x01,
                0x01, 0x01, 0x01, 0x76, 0x07, 0x00, 0x13, 0x06, 0x09, 0xC2, 0xD9, 0x62, 0x00, 0x62, 0x00,
                0x72, 0x63, 0x01, 0x01, 0x76, 0x01, 0x01, 0x07, 0x00, 0x13, 0x11, 0x38, 0x40, 0xF3, 0x0B, 0x06, 0x45, 0x4D, 0x48, 0x01, 0x09, 0x6D, 0x93, 0xF8, 0xFA, 0x01, 0x01, 0x63, 0x11, 0xB3, 0x00,
                0x76, 0x07, 0x00, 0x13, 0x06, 0x09, 0xC2, 0xDA, 0x62, 0x00, 0x62, 0x00, 0x72, 0x63, 0x07,
                0x01, 0x77, 0x01, 0x0B, 0x06, 0x45, 0x4D, 0x48, 0x01, 0x09, 0x6D, 0x93, 0xF8, 0xFA, 0x07,
                0x01, 0x00, 0x62, 0x0A, 0xFF, 0xFF, 0x72, 0x62, 0x01, 0x65, 0x11, 0x38, 0x08, 0x77, 0x7A, 0x77,
                0x07, 0x81, 0x81, 0xC7, 0x82, 0x03, 0xFF, 0x01, 0x01, 0x01, 0x01, 0x04, 0x45, 0x4D, 0x48,
                0x01, 0x77, 0x07, 0x01, 0x00, 0x00, 0x00, 0x09, 0xFF, 0x01, 0x01, 0x01, 0x01, 0x0B, 0x06, 0x45,
                0x4D, 0x48, 0x01, 0x09, 0x6D, 0x93, 0xF8, 0xFA, 0x01, 0x77, 0x07, 0x01, 0x00, 0x01, 0x08,
                0x00, 0xFF, 0x64, 0x01, 0x02, 0x80, 0x01, 0x62, 0x1E, 0x52, 0xFF, 0x56, 0x00, 0x19, 0x39,
                0xB3, 0x37, 0x01, 0x77, 0x07, 0x01, 0x00, 0x02, 0x08, 0x00, 0xFF, 0x64, 0x01, 0x02, 0x80, 0x01,
                0x62, 0x1E, 0x52, 0xFF, 0x56, 0x00, 0x1A,
                0xC3, 0xE6, 0x54, 0x01, 0x77, 0x07, 0x01, 0x00, 0x01, 0x08, 0x01, 0xFF, 0x01, 0x01, 0x62,
                0x1E, 0x52, 0xFF, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x77, 0x07, 0x01, 0x00, 0x02,
                0x08, 0x01, 0xFF, 0x01, 0x01, 0x62, 0x1E, 0x52, 0xFF, 0x56, 0x00, 0x1A,
                0xC3, 0xE6, 0x54, 0x01, 0x77, 0x07, 0x01, 0x00, 0x01, 0x08, 0x02, 0xFF, 0x01, 0x01,
                0x62, 0x1E, 0x52, 0xFF, 0x56, 0x00, 0x19, 0x39, 0xB3, 0x37, 0x01, 0x77, 0x07, 0x01, 0x00,
                0x02, 0x08, 0x02, 0xFF, 0x01, 0x01, 0x62, 0x1E, 0x52, 0xFF, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x77, 0x07, 0x01, 0x00, 0x10, 0x07, 0x00, 0xFF, 0x01, 0x01, 0x62, 0x1B, 0x52, 0xFF, 0x55, 0x00, 0x00, 0x01, 0x8D, 0x01, 0x77, 0x07, 0x81, 0x81, 0xC7, 0x82, 0x05, 0xFF, 0x01, 0x72, 0x62, 0x01, 0x65, 0x11, 0x38, 0x08, 0x78, 0x01, 0x01, 0x83, 0x02, 0x7A, 0x21, 0x7D, 0x5D, 0x15, 0xA5, 0x33, 0x8D, 0xD2, 0xD9, 0x4A, 0xCB, 0x11, 0xDB, 0xAB, 0x07, 0xB9, 0x94, 0xBE,
                0x23, 0x34, 0x24, 0xF2, 0x2E, 0x21, 0x8B, 0xC9, 0x10, 0xF3, 0x34, 0x96, 0xDD, 0xED, 0xA2,
                0x99, 0x77, 0x04, 0xB0, 0xFE, 0xBB, 0xA6, 0x3C, 0x00, 0xE3, 0x32, 0x82, 0x15, 0xE9, 0x01, 0x01,
                0x01, 0x63, 0x04, 0xD2, 0x00, 0x76, 0x07, 0x00, 0x13, 0x06, 0x09, 0xC2, 0xDD, 0x62, 0x00,
                0x62, 0x00, 0x72, 0x63, 0x02, 0x01, 0x71, 0x01, 0x63, 0x6A, 0x20, 0x00, 0x00, 0x1B, 0x1B,
                0x1B, 0x1B, 0x1A, 0x01, 0x06, 0x6C
            };

            var actual = SMLParser.Verify(testData.ToArray());
            Assert.IsTrue(actual, "CRC check failed.");
        }

        [TestMethod]
        public void CheckCRC3InValid()
        {
            var testData = new List<byte>
            {
                0x1b, 0x1b, 0x1b, 0x1b, 
                0x01, 0x01, 0x01, 0x01, 
                0x76, 0x07, 0x00, 0x13, 0x06, 0x0c, 0x49, 0x0b, 0x62, 0x00, 0x62, 0x00, 0x72, 0x63, 0x01, 0x01, 0x76, 0x01, 0x01, 0x07, 0x00, 0x13, 0x11, 0x38, 0x18, 0x59, 0x0b, 0x06, 0x45, 0x4d, 0x48, 0x01, 0x09, 0x6d, 0x93, 0xf8, 0xfa, 0x01, 0x01, 0x63, 0x21, 0xef, 0x00, 0x76, 0x07, 0x00, 0x13, 0x06, 0x0c, 0x49, 0x0c, 0x62, 0x00, 0x62, 0x00, 0x72, 0x63, 0x07, 0x01, 0x77, 0x01, 0x0b, 0x06, 0x45, 0x4d, 0x48, 0x01, 0x09, 0x6d, 0x93, 0xf8, 0xfa, 0x07, 0x01, 0x00, 0x62, 0x0a, 0xff, 0xff, 0x72, 0x62, 0x01, 0x65, 0x11, 0x38, 0xde, 0x7e, 0x7a, 0x77, 0x07, 0x81, 0x81, 0xc7, 0x82, 0x03, 0xff, 0x01, 0x01, 0x01, 0x01, 0x04, 0x45, 0x4d, 0x48, 0x01, 0x77, 0x07, 0x01, 0x00, 0x00, 0x00, 0x09, 0xff, 0x01, 0x01, 0x01, 0x01, 0x0b, 0x06, 0x45, 0x4d, 0x48, 0x01, 0x09, 0x6d, 0x93, 0xf8, 0xfa, 0x01, 0x77, 0x07, 0x01, 0x00, 0x01, 0x08, 0x00, 0xff, 0x64, 0x01, 0x02, 0x80, 0x01, 0x62, 0x1e, 0x52, 0xff, 0x56, 0x00, 0x19, 0x39, 0xbe, 0xab, 0x01, 0x77, 0x07, 0x01, 0x00, 0x02, 0x08, 0x00, 0xff, 0x64, 0x01, 0x02, 0x80, 0x01, 0x62, 0x1e, 0x52, 0xff, 0x56, 0x00, 0x1a, 0xca, 0x3e, 0x35, 0x01, 0x77, 0x07, 0x01, 0x00, 0x01, 0x08, 0x01, 0xff, 0x01, 0x01, 0x62, 0x1e, 0x52, 0xff, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x77, 0x07, 0x01, 0x00, 0x02, 0x08, 0x01, 0xff, 0x01, 0x01, 0x62, 0x1e, 0x52, 0xff, 0x56, 0x00, 0x1a, 0xca, 0x3e, 0x35, 0x01, 0x77, 0x07, 0x01, 0x00, 0x01, 0x08, 0x02, 0xff, 0x01, 0x01, 0x62, 0x1e, 0x52, 0xff, 0x56, 0x00, 0x19, 0x39, 0xbe, 0xab, 0x01, 0x77, 0x07, 0x01, 0x00, 0x02, 0x08, 0x02, 0xff, 0x01, 0x01, 0x62, 0x1e, 0x52, 0xff, 0x56, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x07, 0x01, 0x00, 0x10, 0x07, 0x00, 0xff, 0x01, 0x01, 0x62, 0x1b, 0x52, 0xff, 0x55, 0x00, 0x00, 0x01, 0x7a, 0x01, 0x77, 0x07, 0x81, 0x81, 0xc7, 0x82, 0x05, 0xff, 0x01, 0x72, 0x62, 0x01, 0x65, 0x11, 0x38, 0xde, 0x7e, 0x01, 0x01, 0x83, 0x02, 0x7a, 0x21, 0x7d, 0x5d, 0x15, 0xa5, 0x33, 0x8d, 0xd2, 0xd9, 0x4a, 0xcb, 0x11, 0xdb, 0xab, 0x07, 0xb9, 0x94, 0xbe, 0x23, 0x34, 0x24, 0xf2, 0x2e, 0x21, 0x8b, 0xc9, 0x10, 0xf3, 0x34, 0x96, 0xdd, 0xed, 0xa2, 0x99, 0x77, 0x04, 0xb0, 0xfe, 0xbb, 0xa6, 0x3c, 0x00, 0xe3, 0x32, 0x82, 0x15, 0xe9, 0x01, 0x01, 0x01, 0x63, 0xdd, 0x80, 0x00, 0x76, 0x07, 0x00, 0x13, 0x06, 0x0c, 0x49, 0x0f, 0x62, 0x62, 0x00, 0x72, 0x63, 0x02, 0x01, 0x71, 0x01, 0x63, 0xc8, 0x95, 0x00, 0x00, 
                0x1b, 0x1b, 0x1b, 0x1b, 
                0x1a, 0x01, 0xe5, 0xad
            };

            var actual = SMLParser.Verify(testData.ToArray());
            Assert.IsFalse(actual, "CRC check failed.");
        }
    }
}
